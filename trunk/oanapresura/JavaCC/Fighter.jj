options {
  LOOKAHEAD = 1;
  CHOICE_AMBIGUITY_CHECK = 2;
  OTHER_AMBIGUITY_CHECK = 1;
  STATIC = true;
  DEBUG_PARSER = false;
  DEBUG_LOOKAHEAD = false;
  DEBUG_TOKEN_MANAGER = false;
  ERROR_REPORTING = true;
  JAVA_UNICODE_ESCAPE = false;
  UNICODE_INPUT = false;
  IGNORE_CASE = false;
  USER_TOKEN_MANAGER = false;
  USER_CHAR_STREAM = false;
  BUILD_PARSER = true;
  BUILD_TOKEN_MANAGER = true;
  SANITY_CHECK = true;
  FORCE_LA_CHECK = false;
}

PARSER_BEGIN(Fighter)

public class Fighter {

  /** Main entry point. */
  public static void main(String args[]) throws ParseException {
	System.out.println("Waiting for user input ... ");
    System.out.print("Enter fighter specification:");
    Fighter parser = new Fighter(System.in);
	parser.Input();
	System.out.print("Thanks!");
   
  }

}

PARSER_END(Fighter)

SKIP :
{
  " "
| "\t"
| "\n"
| "\r"
| < "//" (~[ "\n", "\r" ])*
    (
      "\n"
    | "\r"
    | "\r\n"
    ) >
| < "/*" (~[ "*" ])* "*"
    (
      ~[ "/" ] (~[ "*" ])* "*"
    )*
    "/" >
}


TOKEN :
{
	<STRENGTH_VALUE: ( ["1"-"9"] | "10")> 
}

TOKEN :
{
	<LPARAN: "["> | 
	<RPARAN: "]"> 
}

TOKEN :
{
	<LBRACE: "{"> | 
	<RBRACE: "}">   	

}
TOKEN :
{	
	< MOVE: "jump" | "crouch" | "stand" | "runTowards" | "runAway" | "walkTowards" | "walkAway" > 	
|	< STRENGTH: "punchReach" | "kickReach" | "kickPower" | "punchPower" > 
|	< ATTACK: "punchLow" | "punchHigh" | "kickLow" | "kickHigh" | "blockLow" | "blockHigh" > 
|	< CONDITION: "stronger" | "weaker" | "muchStronger" | "muchWeaker" | "even" | "near" | "far" | "always" >

}

TOKEN :
{
	<NAME: ["a"-"z","A"-"Z","_"] ( ["a"-"z","A"-"Z","_","0"-"9"] )* > 
}

/** Root production. */

void Input() :
{}
{
	<NAME> <LBRACE> Strength() Strength() Strength() Strength() ConditionalSpec() <RBRACE> 
} 

void Value() :
{}
{
	<STRENGTH_VALUE> 
}
void Strength() :
{}
{
	 <STRENGTH> "=" <STRENGTH_VALUE>
}

void Attack() :
{}
{
	 <ATTACK> 
}


void ConditionalSpec() :
{}
{
	<CONDITION> <LPARAN> ( <MOVE> )+ <RPARAN>
}

