/* This file was generated by SableCC (http://www.sablecc.org/). */

package saf.node;

import saf.analysis.*;

@SuppressWarnings("nls")
public final class ASingleMoveActionProgramMoveAction extends PProgramMoveAction
{
    private PMoveActionType _moveActionType_;

    public ASingleMoveActionProgramMoveAction()
    {
        // Constructor
    }

    public ASingleMoveActionProgramMoveAction(
        @SuppressWarnings("hiding") PMoveActionType _moveActionType_)
    {
        // Constructor
        setMoveActionType(_moveActionType_);

    }

    @Override
    public Object clone()
    {
        return new ASingleMoveActionProgramMoveAction(
            cloneNode(this._moveActionType_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASingleMoveActionProgramMoveAction(this);
    }

    public PMoveActionType getMoveActionType()
    {
        return this._moveActionType_;
    }

    public void setMoveActionType(PMoveActionType node)
    {
        if(this._moveActionType_ != null)
        {
            this._moveActionType_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._moveActionType_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._moveActionType_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._moveActionType_ == child)
        {
            this._moveActionType_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._moveActionType_ == oldChild)
        {
            setMoveActionType((PMoveActionType) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
