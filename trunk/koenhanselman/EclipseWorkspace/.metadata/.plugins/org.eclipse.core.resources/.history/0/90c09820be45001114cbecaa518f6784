/* This file was generated by SableCC (http://www.sablecc.org/). */

package saf.node;

import saf.analysis.*;

@SuppressWarnings("nls")
public final class AStandMoveActionType extends PMoveActionType
{
    private TStand _stand_;

    public AStandMoveActionType()
    {
        // Constructor
    }

    public AStandMoveActionType(
        @SuppressWarnings("hiding") TStand _stand_)
    {
        // Constructor
        setStand(_stand_);

    }

    @Override
    public Object clone()
    {
        return new AStandMoveActionType(
            cloneNode(this._stand_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAStandMoveActionType(this);
    }

    public TStand getStand()
    {
        return this._stand_;
    }

    public void setStand(TStand node)
    {
        if(this._stand_ != null)
        {
            this._stand_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._stand_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._stand_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._stand_ == child)
        {
            this._stand_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._stand_ == oldChild)
        {
            setStand((TStand) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
