options
{
  JDK_VERSION = "1.5";
  static = false;
}

PARSER_BEGIN(Saf)

package saf;

import saf.objects.*;

public class Saf
{   
	public static void main(String args[])
	{
	    try
	    {
	          Saf parser = new Saf(System.in);
	          Fighter fighter = parser.Parse();
	    }
	    catch(Exception e)
	    {
	          e.printStackTrace();
	    }
	}
}

PARSER_END(Saf)

SKIP : // Whitespace
{
    " "
|   "\r"
|   "\t"
|   "\n"
|   "\r\n"
}

TOKEN :
{
	< ASSIGNMENT : "=" >
|   < IDENTIFIER : ["a"-"z","A"-"Z","_"](["a"-"z","A"-"Z","_","0"-"9"])* >
|   < PROPERTYVALUE : (["1"-"9"] | "10") >
|   < OPENCURLYBRACKET : "{" >
|   < CLOSECURLYBRACKET : "}" >
|   < OPENSQAREBRACKET : "[" >
|   < CLOSESQAREBRACKET : "]" >
}

Fighter Parse() :
{
	Fighter fighter = new Fighter();
	Token fighterName = new Token();
	Strength fighterStrength = new Strength();
	Behavior fighterBehavior = new Behavior();
}
{
    ( fighterName = < IDENTIFIER > )*    {
        fighter.setName(fighterName.toString());    }
    < OPENCURLYBRACKET >
	(
	    LOOKAHEAD(2) ( fighterStrength = Strength() )
	    { fighter.addStrength(fighterStrength); }
	    |
	    LOOKAHEAD(2) ( fighterBehavior = Behavior() )	    { fighter.addBehavior(fighterBehavior); }
	)*
	<  CLOSECURLYBRACKET >
	{ return fighter; }
}

Strength Strength() :
{
    Token name = new Token();
    Token value = new Token();
}
{
    (name = < IDENTIFIER >)
    < ASSIGNMENT >
    (value = < PROPERTYVALUE >)
    { return new Strength(name.toString(),Integer.valueOf(value.toString())); }}

Behavior Behavior() :
{
    Token condition = new Token();
    Token move = new Token();
    Token attack = new Token();
}{
    (condition = < IDENTIFIER >)
    < OPENSQAREBRACKET >
    (move = < IDENTIFIER >)
    (attack = < IDENTIFIER >)
    < CLOSESQAREBRACKET >
    { return new Behavior(new Condition(condition.toString()), new Move(move.toString()), new Attack(attack.toString())); }}




