parser grammar SAFParser;

options {
	output = AST;
	tokenVocab = SAFLexer;
	//ASTLabelType=CommonTree;
}

tokens {
	FIGHTER;
	NAME;
	PERSONALITY;
	CHARACTERISTIC;
	BEHAVIOUR;
	RULE;
	CONDITION;
	MOVEACTION;
	FIGHTACTION;
}

fighter			: 	name LEFT_BRACE (characteristic | rule)+ RIGHT_BRACE -> ^(FIGHTER name ^(PERSONALITY characteristic+) ^(BEHAVIOUR rule+));

name			:	ID -> ^(NAME ID);

characteristic	:	STRENGTH ASSIGN DIGIT -> ^(CHARACTERISTIC STRENGTH DIGIT);
	
rule			:	condition LEFT_BRACKET move attack RIGHT_BRACKET -> ^(RULE condition move attack);

move			:	CHOOSE LEFT_PAREN MOVE_TYPE MOVE_TYPE RIGHT_PAREN -> ^(MOVEACTION CHOOSE MOVE_TYPE MOVE_TYPE)
				|	MOVE_TYPE -> ^(MOVEACTION MOVE_TYPE);

attack			:	CHOOSE LEFT_PAREN ATTACK_TYPE ATTACK_TYPE RIGHT_PAREN -> ^(FIGHTACTION CHOOSE ATTACK_TYPE ATTACK_TYPE)
				|	ATTACK_TYPE -> ^(FIGHTACTION ATTACK_TYPE);

condition		:	CONDITION_TYPE LOGICAL_OPERATOR CONDITION_TYPE -> ^(CONDITION LOGICAL_OPERATOR CONDITION_TYPE CONDITION_TYPE)
				| 	CONDITION_TYPE -> ^(CONDITION CONDITION_TYPE);
