/* This file was generated by SableCC (http://www.sablecc.org/). */

package saf.node;

import saf.analysis.*;

@SuppressWarnings("nls")
public final class APunchpowerProgram extends PProgram
{
    private PProgramPunchpower _programPunchpower_;

    public APunchpowerProgram()
    {
        // Constructor
    }

    public APunchpowerProgram(
        @SuppressWarnings("hiding") PProgramPunchpower _programPunchpower_)
    {
        // Constructor
        setProgramPunchpower(_programPunchpower_);

    }

    @Override
    public Object clone()
    {
        return new APunchpowerProgram(
            cloneNode(this._programPunchpower_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPunchpowerProgram(this);
    }

    public PProgramPunchpower getProgramPunchpower()
    {
        return this._programPunchpower_;
    }

    public void setProgramPunchpower(PProgramPunchpower node)
    {
        if(this._programPunchpower_ != null)
        {
            this._programPunchpower_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._programPunchpower_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._programPunchpower_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._programPunchpower_ == child)
        {
            this._programPunchpower_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._programPunchpower_ == oldChild)
        {
            setProgramPunchpower((PProgramPunchpower) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
