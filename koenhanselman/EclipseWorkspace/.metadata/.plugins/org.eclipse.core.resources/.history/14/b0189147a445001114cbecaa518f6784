/* This file was generated by SableCC (http://www.sablecc.org/). */

package saf.node;

import saf.analysis.*;

@SuppressWarnings("nls")
public final class APunchHighFightActionType extends PFightActionType
{
    private TPunchHigh _punchHigh_;

    public APunchHighFightActionType()
    {
        // Constructor
    }

    public APunchHighFightActionType(
        @SuppressWarnings("hiding") TPunchHigh _punchHigh_)
    {
        // Constructor
        setPunchHigh(_punchHigh_);

    }

    @Override
    public Object clone()
    {
        return new APunchHighFightActionType(
            cloneNode(this._punchHigh_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPunchHighFightActionType(this);
    }

    public TPunchHigh getPunchHigh()
    {
        return this._punchHigh_;
    }

    public void setPunchHigh(TPunchHigh node)
    {
        if(this._punchHigh_ != null)
        {
            this._punchHigh_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._punchHigh_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._punchHigh_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._punchHigh_ == child)
        {
            this._punchHigh_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._punchHigh_ == oldChild)
        {
            setPunchHigh((TPunchHigh) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
