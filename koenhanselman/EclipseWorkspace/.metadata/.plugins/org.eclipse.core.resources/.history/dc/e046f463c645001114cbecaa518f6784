/* This file was generated by SableCC (http://www.sablecc.org/). */

package saf.node;

import saf.analysis.*;

@SuppressWarnings("nls")
public final class AJumpMoveActionType extends PMoveActionType
{
    private TJump _jump_;

    public AJumpMoveActionType()
    {
        // Constructor
    }

    public AJumpMoveActionType(
        @SuppressWarnings("hiding") TJump _jump_)
    {
        // Constructor
        setJump(_jump_);

    }

    @Override
    public Object clone()
    {
        return new AJumpMoveActionType(
            cloneNode(this._jump_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAJumpMoveActionType(this);
    }

    public TJump getJump()
    {
        return this._jump_;
    }

    public void setJump(TJump node)
    {
        if(this._jump_ != null)
        {
            this._jump_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._jump_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._jump_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._jump_ == child)
        {
            this._jump_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._jump_ == oldChild)
        {
            setJump((TJump) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
