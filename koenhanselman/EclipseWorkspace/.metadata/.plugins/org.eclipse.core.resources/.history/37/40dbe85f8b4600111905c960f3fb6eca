/* saf.grammar - A grammar the SAF language */ 
Package saf ; 
     
Helpers 
    nl = (10 | 13)+ ;
    space = ' ' ;
    tab = 9 ;
      
Tokens 
	digit = ['0' .. '9'] ;
    letter = [['a' .. 'z'] + ['A' .. 'Z']] ;
    newline = ("\n" | "\r" | "\n\r" | "\r\n")+ ;
    space = space ;
    blank = (space | tab)+ ;
    left_curly = '{' ;
    right_curly = '}' ;
    left_bracket = '[' ;
    right_bracket = ']' ;
    left_paren = '(' ;
    right_paren = ')' ;
    equals = '=' ;
    
    /* Characteristics */
    punch_reach = 'punchReach' ;
    punch_power = 'punchPower' ;
    kick_reach = 'kickReach' ;
    kick_power = 'kickPower' ;

Ignored Tokens
	comment
  
Productions 
    program = program_header program_personality program_behaviour program_footer ;
    program_header = letter+ left_curly ;
    program_footer = newline right_curly ;
    
    program_personality = program_characteristic+ ; 
    program_characteristic = newline letter+ equals digit ;
    
    program_behaviour = program_rule+ ;
    program_rule = newline letter+ left_bracket program_action program_action right_bracket ;
    
    program_action = letter+ left_paren letter+ (letter+ | space)* right_paren | letter+ ;