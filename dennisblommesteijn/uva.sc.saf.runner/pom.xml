<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.blommesteijn</groupId>
	<artifactId>uva.sc.saf.runner</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>uva.sc.saf.runner</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-assembly-plugin</artifactId>
			<version>2.3</version>
			<type>maven-plugin</type>
		</dependency>
		<dependency>
			<groupId>gnu.getopt</groupId>
			<artifactId>java-getopt</artifactId>
			<version>1.0.13</version>
		</dependency>
		<dependency>
			<groupId>com.blommesteijn</groupId>
			<artifactId>uva.sc.saf</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>

				<!-- Build an uber-jar that is packaged with all the other dependencies, 
					such as the antlr-runtime and so on. This will be useful for developers, 
					who then do not need to download anything else or remember that they need 
					antlr.jar in their CLASSPATH and so on. You can delete this plugin of course 
					and you will then get a jar file with only the code generated and included 
					directly in this project. With this plugin though you will find that when 
					you build with: mvn install There will be an executable jar generated. You 
					can run this as: java -jar uva.sc.saf-0.0.1-SNAPSHOT-jar-with-dependencies.jar 
					demosource.dmo assuming you have a file called demosource.dmo to attempt 
					a parse. -->
				<artifactId>maven-assembly-plugin</artifactId>

				<configuration>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					<!-- Specify that we want the resulting jar to be executable via java 
						-jar, which we do by modifying the manifest of course. -->
					<archive>

						<manifest>
							<mainClass>com.blommesteijn.uva.sc.saf.runner.Main</mainClass>
						</manifest>
					</archive>

				</configuration>

				<!-- We don't want to have to specifically ask for the uber jar, so we 
					attach the running of this plugin to the execution of the package life-cycle 
					phase. -->
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>attached</goal>
						</goals>
					</execution>
				</executions>

			</plugin>
		</plugins>
	</build>
</project>
